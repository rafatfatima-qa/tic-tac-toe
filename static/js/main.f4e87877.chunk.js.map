{"version":3,"sources":["components/Helpers.js","components/Square.js","components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","console","log","style","background","border","fontSize","fontWeight","cursor","outline","color","Square","value","onClick","borderRadius","width","height","marginTop","marginLeft","marginRight","display","gridTemplate","Board","map","square","styles","margin","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","timeInHistory","slice","current","__step","move","destination","step","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4e87877.chunk.js","sourcesContent":["export function calculateWinner(squares){\r\n    const lines= [\r\n        [0,1,2],\r\n        [3,4,5],\r\n        [6,7,8],\r\n        [0,3,6],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [0,4,8],\r\n        [2,4,6]\r\n    ];\r\n    for(let i=0; i<lines.length; i++){\r\n        const [a,b,c]= lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n            return squares[a];\r\n        }\r\n\r\n    }\r\n    return null;\r\n}\r\nconst squares=[\r\n    null,null,null,\r\n    'x','x','x',\r\n    null,null,null\r\n];\r\nconsole.log(calculateWinner(squares));","import React from \"react\";\r\n\r\nconst style ={\r\n    background:'rgb(33, 207, 170)',\r\n    border: '1px solid white',\r\n    fontSize :'30px',\r\n    fontWeight: '800',\r\n    cursor: 'pointer',\r\n    outline: 'none' ,\r\n    color: \"white\"\r\n};\r\n\r\nconst Square = ({value, onClick}) => (\r\n    <button style={style} onClick={onClick}>\r\n        {value}\r\n    </button>\r\n\r\n);\r\n\r\n\r\nexport default Square;","import React from \"react\";\r\n\r\nimport Square from './Square';\r\n\r\nconst style ={\r\n    border: '4px solid blue',\r\n    borderRadius: '8px',\r\n    width: '250px',\r\n    height: '250px',\r\n    marginTop: '180px',\r\n    marginLeft: '500px',\r\n    marginRight: '500px',\r\n    display: 'grid',\r\n    gridTemplate: 'repeat(3,1fr)/ repeat(3,1fr)'\r\n}\r\nconst Board =({squares,onClick}) =>(\r\n    \r\n         <div style={style}>\r\n             {squares.map((square,i)=>(\r\n                 <Square key={i} value={square} onClick={()=> onClick(i)}/>\r\n             )\r\n             )}\r\n           \r\n            </div>\r\n    )\r\n\r\n\r\nexport default Board;","import { useState } from 'react';\r\nimport { calculateWinner } from './Helpers';\r\nimport Board from './Board';\r\n\r\nconst styles={\r\n    width: '200px',\r\n    margin:'18px auto',\r\n}\r\nconst Game=()=> {\r\n   const [history, setHistory] = useState([Array(9).fill(null)]);\r\n   const [stepNumber,setStepNumber]= useState(0);\r\n   const [xIsNext, setXisNext]=  useState(true);\r\n   const winner = calculateWinner(history[stepNumber]);\r\n    const handleClick = i =>{\r\n        const timeInHistory =history.slice(0,stepNumber + 1)\r\n        const current = timeInHistory[stepNumber];\r\n        const squares =[...current];\r\n       \r\n        if(winner || squares[i])\r\n        return;\r\n        \r\n        squares[i]= xIsNext ? 'x' : '0';\r\n        setHistory([...timeInHistory,squares]);\r\n        setStepNumber(timeInHistory.length)\r\n        setXisNext(!xIsNext);\r\n\r\n    }\r\n    const jumpTo = step => {\r\n        setStepNumber(step);\r\n        setXisNext(step % 2 === 0)\r\n    };\r\n   const renderMoves=()=> (\r\n       history.map((__step,move)=>{\r\n           const destination = move ? `Go to move${move}` : 'Start Game';\r\n           return(\r\n               <li key={move}>\r\n                   <button onClick={()=> jumpTo(move)}>{destination}</button>\r\n               </li>\r\n           )\r\n       })\r\n       \r\n   )\r\n        \r\n    \r\n    return (\r\n        <>\r\n        <Board  squares={history[stepNumber]} onClick={handleClick} />\r\n       <div style={styles}>\r\n           <p>{winner ? 'Winner: ' + winner :'Next Player: ' +(xIsNext ? 'x' : '0')}</p>\r\n           {renderMoves()}\r\n       </div>\r\n        </>\r\n    )\r\n    }\r\n\r\n\r\nexport default Game;","import React from \"react\";\nimport './App.css';\nimport Game from \"./components/Game\";\n\n\nfunction App() {\n  return (\n    <>\n     \n     <Game/>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}